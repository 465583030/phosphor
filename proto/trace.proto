syntax="proto3";

package proto;

message Annotation {
  // The ID of the trace this annotation is a component of
  string trace_id = 1;

  // The span this trace corresponds to, in the case this
  // is representing a service (REQ/REP) call
  string span_id = 2;

  // The parent span this trace corresponds to, allowing us
  // to correlate trace frames and reconstruct the request
  string parent_id = 3;

  // The type of annotation we're capturing
  AnnotationType type = 4;

  // Flag to indicate this is an asynchronous span, which will not have a
  // response - eg. just client send and server recv annotations
  bool async = 5;

  // Time since the epoch in microseconds
  int64 timestamp = 6;

  // Duration in microseconds
  // This should only be used to measure time on the same node
  // eg. the duration of service / rpc calls
  int64 duration = 7;

  // Machine hostname, container name etc
  string hostname = 8;

  // Origin of this annotation, likely a service or application for a RPC
  string origin = 9;

  // Destination of this annotations action
  // eg. the service which a request was destined for
  // likely not set for annotations
  string destination = 10;

  // Payload as a string - eg. JSON encoded
  string payload = 11;

  // Repeated series of key value fields for arbitrary data
  repeated KeyValue key_value = 12;
}

enum AnnotationType {
	UNKNOWN = 0;

	CLIENT_SEND = 1;
	CLIENT_RECV = 2;
	SERVER_SEND = 3;
	SERVER_RECV = 4;

	TIMEOUT = 5;

	ANNOTATION = 6;
}

message KeyValue {
	string key = 1;
	string value = 2;
}
